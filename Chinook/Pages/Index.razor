@page "/"
@attribute [Authorize]

@using Chinook.Models
@using Chinook.Services;
@using Microsoft.EntityFrameworkCore

<PageTitle>Index</PageTitle>

<h1>Artists</h1>

<InputText @onkeyup="@Search" class="form-control col-md-6" @bind-Value="searchText" placeholder="Type text and hit the enter" />

@if (Artists == null)
{
    <Loading /> 
}
else
{
    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th>Name</th>
                <th>Number of albums</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var artist in Artists)
            {
                <tr>
                    <td><a href="Artist/@artist.ArtistId">@artist.Name</a></td>
                    <td>@artist.Albums.Count()</td>
                </tr>
            }
        </tbody>
    </table>
}

@inject ViewModels.UserPlaylistViewModel userPlaylistViewModel;

@code {
    private string searchText;
    private List<Artist> Artists;
    [Inject] IDbContextFactory<ChinookContext> DbFactory { get; set; }

    [Inject] IArtistService ArtistService { get; set; }


    protected override async Task OnInitializedAsync() {
        await InvokeAsync(StateHasChanged);
        Artists = await GetArtists();
        searchText = "";
    }

    public async Task<List<Artist>> GetArtists()
    {
        var users = await ArtistService.GetArtists();
        return users.ToList();
    }

    public async Task<List<Album>> GetAlbumsForArtist(int artistId)
    {
        var dbContext = await DbFactory.CreateDbContextAsync();
        return dbContext.Albums.Where(a => a.ArtistId == artistId).ToList();
    }

    public async Task Search(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            var dbContext = await DbFactory.CreateDbContextAsync();
            if (!string.IsNullOrEmpty(searchText))
            {
                Artists = dbContext.Artists.Where(a => a.Name.ToLower()
                .Contains(searchText.ToLower())).ToList();
            }
            else
            {
                Artists = dbContext.Artists.ToList();
            }
        }
         
    }
}
